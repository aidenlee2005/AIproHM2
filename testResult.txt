Running HM3 test cases...
---------Task1: fully-connected layer---------
Testing forward_fc function...

input:
[[ 0.9 0.8 0.5 ]
 [ 0.8 0.2 0.6 ]
 [ 0.1 0.4 0.4 ]
 [ 0.5 0.5 0.2 ]
 [ 0.2 0.8 0.8 ]]
weight:
[[ 0.9 0.8 ]
 [ 0.5 0.8 ]
 [ 0.2 0.6 ]]
bias:
[[ 0.9 0.8 ]]
output:
[[ 2.21 2.46 ]
 [ 1.84 1.96 ]
 [ 1.27 1.44 ]
 [ 1.64 1.72 ]
 [ 1.64 2.08 ]]
**Pytorch Result**
[[2.21 2.46]
 [1.84 1.96]
 [1.27 1.44]
 [1.64 1.72]
 [1.64 2.08]]
**CORRECT**


Testing backward_fc function...

grad_output:
[[ 0.9 0.8 ]
 [ 0.5 0.8 ]
 [ 0.2 0.6 ]
 [ 0.1 0.4 ]
 [ 0.4 0.5 ]]
grad_input:
[[ 1.45 1.09 0.66 ]
 [ 1.09 0.89 0.58 ]
 [ 0.66 0.58 0.4 ]
 [ 0.41 0.37 0.26 ]
 [ 0.76 0.6 0.38 ]]
**Pytorch Result**
[[1.45 1.09 0.66]
 [1.09 0.89 0.58]
 [0.66 0.58 0.4 ]
 [0.41 0.37 0.26]
 [0.76 0.6  0.38]]
**CORRECT**

grad_weight:
[[ 1.36 1.72 ]
 [ 1.27 1.64 ]
 [ 1.17 1.6 ]]
**Pytorch Result**
[[1.36 1.72]
 [1.27 1.64]
 [1.17 1.6 ]]
**CORRECT**

grad_bias:
[[ 2.1 3.1 ]]
**Pytorch Result**
[2.1 3.1]
**CORRECT**


---------Task2: convolution layer---------
Testing forward_conv2d function...

input:
[[[[ 0.9 0.8 0.5 0.8 ]
   [ 0.2 0.6 0.1 0.4 ]
   [ 0.4 0.5 0.5 0.2 ]
   [ 0.2 0.8 0.8 0.3 ]]
  [[ 0.5 0.1 0.6 0.1 ]
   [ 0.2 0.9 0.7 0.3 ]
   [ 0 0.7 0.7 0.2 ]
   [ 0 0.5 0.9 0.8 ]]
  [[ 0.2 0.3 0.2 0 ]
   [ 0.8 0.7 0.6 0.8 ]
   [ 0 0.7 0.2 0.4 ]
   [ 0.7 0.1 0.8 0.9 ]]]]
weight:
[[[[ 0.9 0.8 0.5 ]
   [ 0.8 0.2 0.6 ]
   [ 0.1 0.4 0.4 ]]
  [[ 0.5 0.5 0.2 ]
   [ 0.2 0.8 0.8 ]
   [ 0.3 0.5 0.1 ]]
  [[ 0.6 0.1 0.2 ]
   [ 0.9 0.7 0.3 ]
   [ 0 0.7 0.7 ]]]
 [[[ 0.2 0 0.5 ]
   [ 0.9 0.8 0.2 ]
   [ 0.3 0.2 0 ]]
  [[ 0.8 0.7 0.6 ]
   [ 0.8 0 0.7 ]
   [ 0.2 0.4 0.7 ]]
  [[ 0.1 0.8 0.9 ]
   [ 0.8 0.3 0.8 ]
   [ 0.2 0.9 0.6 ]]]]
output:
[[[[ 2.93 4.08 4.1 2.03 ]
   [ 4.44 6.85 6.43 3.92 ]
   [ 3.12 6.09 7.08 4.05 ]
   [ 2.29 4.47 5.57 4.09 ]]
  [[ 3.14 5 3.76 2.94 ]
   [ 3.94 6.1 5.69 3.17 ]
   [ 4.8 5.96 8.21 4.71 ]
   [ 2.26 4.82 5.38 3.73 ]]]]
**Pytorch Result**
[[[[2.93 4.08 4.1  2.03]
   [4.44 6.85 6.43 3.92]
   [3.12 6.09 7.08 4.05]
   [2.29 4.47 5.57 4.09]]

  [[3.14 5.   3.76 2.94]
   [3.94 6.1  5.69 3.17]
   [4.8  5.96 8.21 4.71]
   [2.26 4.82 5.38 3.73]]]]
**CORRECT**


Testing backward_conv2d function...

grad_output:
[[[[ 0.9 0.8 0.5 0.8 ]
   [ 0.2 0.6 0.1 0.4 ]
   [ 0.4 0.5 0.5 0.2 ]
   [ 0.2 0.8 0.8 0.3 ]]
  [[ 0.5 0.1 0.6 0.1 ]
   [ 0.2 0.9 0.7 0.3 ]
   [ 0 0.7 0.7 0.2 ]
   [ 0 0.5 0.9 0.8 ]]]]
grad_input:
[[[[ 2.19 2.73 3.06 1.38 ]
   [ 2.97 3.83 3.68 1.82 ]
   [ 2.54 4.29 3.71 1.99 ]
   [ 1.55 2.89 3.04 1.68 ]]
  [[ 2.22 3.99 2.99 2.31 ]
   [ 2.92 4.14 3.93 2.56 ]
   [ 2.42 4.28 4.97 3.28 ]
   [ 1.21 2.54 3.5 2.23 ]]
  [[ 2.21 3.32 3.42 2.15 ]
   [ 2.97 4.32 4.79 3.23 ]
   [ 2.34 4.41 5 3.59 ]
   [ 1.68 3.61 4.17 2.5 ]]]]
**Pytorch Result**
[[[[2.19 2.73 3.06 1.38]
   [2.97 3.83 3.68 1.82]
   [2.54 4.29 3.71 1.99]
   [1.55 2.89 3.04 1.68]]

  [[2.22 3.99 2.99 2.31]
   [2.92 4.14 3.93 2.56]
   [2.42 4.28 4.97 3.28]
   [1.21 2.54 3.5  2.23]]

  [[2.21 3.32 3.42 2.15]
   [2.97 4.32 4.79 3.23]
   [2.34 4.41 5.   3.59]
   [1.68 3.61 4.17 2.5 ]]]]
**CORRECT**

grad_weight:
[[[[ 2.11 2.48 1.69 ]
   [ 3.33 5.02 3.33 ]
   [ 1.69 2.48 2.11 ]]
  [[ 2.01 2.38 2.11 ]
   [ 2.58 3.78 3.44 ]
   [ 1.95 2.92 3.15 ]]
  [[ 1.72 2.21 1.78 ]
   [ 2.53 3.14 2.97 ]
   [ 2.18 3.73 2.7 ]]]
 [[[ 3.15 2.92 1.95 ]
   [ 3.44 3.78 2.58 ]
   [ 2.11 2.38 2.01 ]]
  [[ 2.8 2.96 1.86 ]
   [ 2.99 4.78 2.99 ]
   [ 1.86 2.96 2.8 ]]
  [[ 2.41 2.37 1.68 ]
   [ 3.22 3.9 3.04 ]
   [ 1.83 2.61 2.68 ]]]]
**Pytorch Result**
[[[[2.11 2.48 1.69]
   [3.33 5.02 3.33]
   [1.69 2.48 2.11]]

  [[2.01 2.38 2.11]
   [2.58 3.78 3.44]
   [1.95 2.92 3.15]]

  [[1.72 2.21 1.78]
   [2.53 3.14 2.97]
   [2.18 3.73 2.7 ]]]


 [[[3.15 2.92 1.95]
   [3.44 3.78 2.58]
   [2.11 2.38 2.01]]

  [[2.8  2.96 1.86]
   [2.99 4.78 2.99]
   [1.86 2.96 2.8 ]]

  [[2.41 2.37 1.68]
   [3.22 3.9  3.04]
   [1.83 2.61 2.68]]]]
**CORRECT**


---------Task3: Maxpooling layer---------
Testing forward_maxpool2d function...

input:
[[[[ 0.9 0.8 0.5 0.8 ]
   [ 0.2 0.6 0.1 0.4 ]
   [ 0.4 0.5 0.5 0.2 ]
   [ 0.2 0.8 0.8 0.3 ]]
  [[ 0.5 0.1 0.6 0.1 ]
   [ 0.2 0.9 0.7 0.3 ]
   [ 0 0.7 0.7 0.2 ]
   [ 0 0.5 0.9 0.8 ]]
  [[ 0.2 0.3 0.2 0 ]
   [ 0.8 0.7 0.6 0.8 ]
   [ 0 0.7 0.2 0.4 ]
   [ 0.7 0.1 0.8 0.9 ]]]]
output:
[[[[ 0.9 0.8 ]
   [ 0.8 0.8 ]]
  [[ 0.9 0.7 ]
   [ 0.7 0.9 ]]
  [[ 0.8 0.8 ]
   [ 0.7 0.9 ]]]]
**Pytorch Result**
[[[[0.9 0.8]
   [0.8 0.8]]

  [[0.9 0.7]
   [0.7 0.9]]

  [[0.8 0.8]
   [0.7 0.9]]]]
**CORRECT**

mask:
[[[[ 0 3 ]
   [ 13 14 ]]
  [[ 21 22 ]
   [ 25 30 ]]
  [[ 36 39 ]
   [ 41 47 ]]]]

Testing backward_maxpool2d function...

grad_output:
[[[[ 0.9 0.8 ]
   [ 0.5 0.8 ]]
  [[ 0.2 0.6 ]
   [ 0.1 0.4 ]]
  [[ 0.4 0.5 ]
   [ 0.5 0.2 ]]]]
grad_input:
[[[[ 0.9 0 0 0.8 ]
   [ 0 0 0 0 ]
   [ 0 0 0 0 ]
   [ 0 0.5 0.8 0 ]]
  [[ 0 0 0 0 ]
   [ 0 0.2 0.6 0 ]
   [ 0 0.1 0 0 ]
   [ 0 0 0.4 0 ]]
  [[ 0 0 0 0 ]
   [ 0.4 0 0 0.5 ]
   [ 0 0.5 0 0 ]
   [ 0 0 0 0.2 ]]]]
**Pytorch Result**
[[[[0.9 0.  0.  0.8]
   [0.  0.  0.  0. ]
   [0.  0.  0.  0. ]
   [0.  0.5 0.8 0. ]]

  [[0.  0.  0.  0. ]
   [0.  0.2 0.6 0. ]
   [0.  0.1 0.  0. ]
   [0.  0.  0.4 0. ]]

  [[0.  0.  0.  0. ]
   [0.4 0.  0.  0.5]
   [0.  0.5 0.  0. ]
   [0.  0.  0.  0.2]]]]
**CORRECT**


---------Task4&5: Softmax and Cross-entropy loss---------
Testing forward_softmax function...

input:
[[ 0.9 0.8 0.5 0.8 ]
 [ 0.2 0.6 0.1 0.4 ]
 [ 0.4 0.5 0.5 0.2 ]]
target:
[ 3 3 1 ]
output:
[[ 0.287357 0.260011 0.192621 0.260011 ]
 [ 0.216541 0.323041 0.195934 0.264484 ]
 [ 0.248196 0.274299 0.274299 0.203206 ]]
**Pytorch Result**
[[0.28735676 0.26001117 0.192621   0.26001117]
 [0.2165409  0.32304108 0.19593433 0.26448366]
 [0.24819608 0.2742991  0.2742991  0.20320575]]
**CORRECT**


Testing backward_cross_entropy function...

loss:
1.32351
**Pytorch Result**
1.3235142230987549
**CORRECT**

grad_output:
[[ 0.0957856 0.0866704 0.064207 -0.246663 ]
 [ 0.0721803 0.10768 0.0653114 -0.245172 ]
 [ 0.082732 -0.2419 0.091433 0.0677353 ]]
**Pytorch Result**
[[ 0.09578559  0.0866704   0.064207   -0.24666294]
 [ 0.0721803   0.10768037  0.06531145 -0.24517211]
 [ 0.08273203 -0.24190031  0.09143303  0.06773526]]
**CORRECT**

All test cases passed!
